{"version":3,"sources":["constants/MapConfig.js","constants/MarkersTypes.js","components/Statistics.js","constants/MarkerColors.js","components/Popup.js","components/Marker.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["MAP","container","style","zoom","center","MARKERS_TYPES","zero","one","two","three","four","five","Statistic","_ref","markers","exportFile","react_default","a","createElement","className","key","length","Object","keys","map","i","type","filter","element","score","onClick","MARKER_COLORS","Popup","options","value","color","handleChange","val","_this","props","editMarker","removeMarker","_this2","this","item","index","backgroundColor","index_es","icon","faTrash","size","title","PureComponent","Marker","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addMarker","marker","popupContainer","document","ReactDOM","render","React","param","popup","MapboxGl","offset","setDOMContent","draggable","setPopup","setLngLat","values","lngLat","addTo","handleEditMarker","objectSpread","getMarkerColor","remove","getLngLat","handleRemoveMarker","Component","Map","state","markersList","bind","assertThisInitialized","on","e","originalEvent","target","tagName","event","id","Date","now","setState","concat","toConsumableArray","file","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","_this3","components_Marker","onMarkerRemove","onEditMarker","Statistics","App","components_Map","Boolean","window","location","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb0ad336.chunk.js","sourcesContent":["const MAP = {\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v11',\n    zoom: 4,\n    center: [31.1656, 48.3794]\n};\n\nexport default MAP;","const MARKERS_TYPES = {\n  zero: 'Zero',\n  one: 'One',\n  two: 'Two',\n  three: 'Three',\n  four: 'Four',\n  five: 'Five',\n}\n\nexport default MARKERS_TYPES;\n","import React from 'react';\nimport MARKERS_TYPES from '../constants/MarkersTypes';\n\nconst Statistic = ({ markers, exportFile}) => {\n  const getAmountOfMarkersType = (type) => markers.filter(element => element.score === type).length;\n  return <div className=\"markerlist-container\">\n    <ul className='markerlist'>\n      <li key={0}>\n        <div className='score-title'>Total:</div>\n        <div className='score-value'>{markers.length}</div>\n      </li>\n      {Object.keys(MARKERS_TYPES).map(\n        i => ((\n          <li key={i}>\n            <div className='score-title'>{MARKERS_TYPES[i]}: </div>\n            <div className='score-value'>{getAmountOfMarkersType(i)}</div>\n          </li>\n        ))\n      )}\n    </ul>\n    <button className='export-btn' onClick={exportFile}>Export</button>\n  </div>\n}\n\nexport default Statistic;\n","const MARKER_COLORS = {\r\n  zero: '#000',\r\n  one: '#808080',\r\n  two: '#B00000',\r\n  three: '#FF9933',\r\n  four: '#99FF66',\r\n  five: '#669933',\r\n}\r\n\r\nexport default MARKER_COLORS;\r\n","import React, { PureComponent } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport MARKER_COLORS from '../constants/MarkerColors';\r\n\r\nexport default class Popup extends PureComponent {\r\n  options = Object.keys(MARKER_COLORS).map(i => ({ value: i, color: MARKER_COLORS[i] }));\r\n\r\n  handleChange = (val) => this.props.editMarker(val);\r\n  removeMarker = () => this.props.removeMarker();\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"marker-color-container\">\r\n          <p>Change marker's score:</p>\r\n          {this.options.map((item, index) => (\r\n            <div\r\n              className=\"marker-color-item\"\r\n              key={item.value}\r\n              style={{ backgroundColor: item.color }}\r\n              onClick={() => this.handleChange(item.value)}\r\n            >\r\n              {index}\r\n            </div>\r\n          ))}\r\n          <div className=\"remove-button-container\">\r\n          <FontAwesomeIcon\r\n            icon={faTrash}\r\n            size='2x'\r\n            title=\"Remove Marker\"\r\n            className=\"remove-button\"\r\n            onClick={this.removeMarker}\r\n          />\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as MapboxGl from 'mapbox-gl';\nimport Popup from './Popup';\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\n\nimport MARKER_COLORS from '../constants/MarkerColors';\n\nclass Marker extends Component {\n  constructor(props) {\n    super(props);\n    this.map = this.props.map;\n    this.addMarker(this.props.marker);\n  }\n\n  addMarker(marker) {\n    const popupContainer = document.createElement('div');\n    ReactDOM.render(React.createElement(\n      Popup, { editMarker: (param) => this.editMarker(param), removeMarker: () => this.removeMarker() }\n    ), popupContainer);\n    this.popup = new MapboxGl.Popup({ offset: 25 }).setDOMContent(popupContainer);\n    this.marker = new MapboxGl.Marker({\n      draggable: true,\n      color: MARKER_COLORS[marker.score]\n    })\n      .setPopup(this.popup)\n      .setLngLat(Object.values(marker.lngLat))\n      .addTo(this.map);\n  }\n\n  editMarker(score) {\n    this.props.handleEditMarker({ ...this.props.marker, score });\n    const color = this.getMarkerColor(score);\n    this.marker.remove();\n    this.marker = new MapboxGl.Marker({\n      draggable: true,\n      color\n    })\n      .setLngLat(Object.values(this.marker.getLngLat()))\n      .setPopup(this.popup)\n      .addTo(this.map);\n\n  }\n\n  getMarkerColor(score) {\n    return MARKER_COLORS[score];\n  }\n\n  removeMarker() {\n    this.marker.remove();\n    this.props.handleRemoveMarker(this.props.marker);\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default Marker;\n","import React, { Component } from 'react';\nimport * as MapboxGl from 'mapbox-gl';\nimport map from '../constants/MapConfig';\nimport Statistic from './Statistics';\n\nimport Marker from './Marker';\n\nclass Map extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markersList: []\n    }\n    this.exportFile = this.exportFile.bind(this);\n  }\n\n  componentDidMount() {\n    this.map = new MapboxGl.Map(map);\n    this.map.on('click', (e) => e.originalEvent.target.tagName === 'CANVAS' && this.addMarker(e));\n  }\n\n  addMarker(event) {\n    const { lngLat } = event;\n    const marker = { id: Date.now(), score: 'zero', lngLat }\n    this.setState({ markersList: [...this.state.markersList, marker] });\n  }\n\n  onMarkerRemove(marker) {\n    this.setState({ markersList: this.state.markersList.filter(i => i.id !== marker.id) });\n  }\n\n  onEditMarker(marker) {\n    const markersList = this.state.markersList.map(i => i.id === marker.id ? marker : i);\n    this.setState({ markersList });\n  }\n\n  exportFile() {\n    const element = document.createElement('a');\n    const file = new Blob([JSON.stringify(this.state.markersList)], { type: 'application/json' });\n    element.href = URL.createObjectURL(file);\n    element.download = 'mapExportData.json';\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"map\"></div>\n        {this.state.markersList.map((i, index) => (\n          <Marker\n            key={index}\n            map={this.map}\n            marker={i}\n            handleRemoveMarker={(marker) => this.onMarkerRemove(marker)}\n            handleEditMarker={(marker) => this.onEditMarker(marker)}\n          />\n        ))}\n        <Statistic markers={this.state.markersList} exportFile={this.exportFile} />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport * as MapboxGl from 'mapbox-gl';\n\nimport Map from './components/Map';\nimport './App.css';\n\nMapboxGl.accessToken = 'pk.eyJ1IjoiZGlhbmEtbGVtZW4iLCJhIjoiY2p1ZWVuNGpnMDJrNDQzcGFsZHVmbG9tNSJ9.WhGU5WTI4hYzFU8a3nxhJQ';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Map />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}